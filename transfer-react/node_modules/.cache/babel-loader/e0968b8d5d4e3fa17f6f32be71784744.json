{"ast":null,"code":"var _jsxFileName = \"/home/blockchain/ethererum/eth-transfer/transfer-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sender: '',\n      receiver: '',\n      value: '',\n      message: ''\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        message: 'Waiting on transaction success...'\n      });\n      await lottery.methods.sendEther().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether')\n      });\n      this.setState({\n        message: '!'\n      });\n    };\n\n    this.onClick = async () => {\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        message: 'Waiting on transaction success...'\n      });\n      await lottery.methods.setReceiver().send({\n        from: accounts[0]\n      });\n      this.setState({\n        receiver: accounts[0]\n      });\n      this.setState({\n        message: 'Sent Ether to Receiver!'\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const sender = await lottery.methods.sender().call(); //const receiver = await lottery.methods.setReceiver().call();\n    //const balance = await web3.eth.getBalance(lottery.options.address);\n\n    this.setState({\n      sender\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Simple Ether Transfer Contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This contract is managed by \", this.state.sender, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Set Receiver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onClick,\n        children: \"Set Receiver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Want to transfer Ether?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount of ether to enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.value,\n            onChange: event => this.setState({\n              value: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Ether\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/blockchain/ethererum/eth-transfer/transfer-react/src/App.js"],"names":["React","Component","web3","lottery","App","state","sender","receiver","value","message","onSubmit","event","preventDefault","accounts","eth","getAccounts","setState","methods","sendEther","send","from","utils","toWei","onClick","setReceiver","componentDidMount","call","render","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport web3 from './web3';\nimport lottery from './lottery';\n\nclass App extends Component {\n  state = {\n    sender: '',\n    receiver:'',\n    value:'',\n    message:''\n  };\n\n  async componentDidMount() {\n    const sender = await lottery.methods.sender().call();\n    //const receiver = await lottery.methods.setReceiver().call();\n    //const balance = await web3.eth.getBalance(lottery.options.address);\n\n    this.setState({ sender});\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: 'Waiting on transaction success...' });\n\n    await lottery.methods.sendEther().send({\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value, 'ether')\n    });\n    \n    this.setState({ message: '!' });\n  };\n\n  onClick = async () => {\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ message: 'Waiting on transaction success...' });\n\n    await lottery.methods.setReceiver().send({\n      from: accounts[0],\n      \n    });\n    this.setState({receiver:accounts[0]});\n    this.setState({ message: 'Sent Ether to Receiver!' });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Simple Ether Transfer Contract</h2>\n        <p>\n          This contract is managed by {this.state.sender}.           \n        </p>\n\n        <hr />\n        <h4>Set Receiver</h4>\n        <button onClick={this.onClick}>Set Receiver</button>   \n        <hr />\n\n        <form onSubmit={this.onSubmit}>\n          <h4>Want to transfer Ether?</h4>\n          <div>\n            <label>Amount of ether to enter</label>\n            <input\n              value={this.state.value}\n              onChange={event => this.setState({ value: event.target.value })}\n            />\n          </div>\n          <button>Send Ether</button>\n        </form>\n\n       \n        <hr />\n\n        <h1>{this.state.message}</h1>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}